<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.UserTestMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.UserTest" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="mobileno" property="mobileno" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="departmentno" property="departmentno" jdbcType="VARCHAR" />
    <result column="lastupdatedAt" property="lastupdatedat" jdbcType="TIMESTAMP" />
    <result column="lastloginAt" property="lastloginat" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, loginname, role, sex, mobileno, department, departmentno, lastupdatedAt,
    lastloginAt
  </sql>
  <select id="selectUsers" resultType="com.example.demo.model.UserTest" >
    select
    <include refid="Base_Column_List" /> from api_usertest
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from api_usertest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from api_usertest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.UserTest" >
    insert into api_usertest (id, username, loginname,
      role, sex, mobileno,
      department, departmentno, lastupdatedAt,
      lastloginAt)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR},
      #{role,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{mobileno,jdbcType=VARCHAR},
      #{department,jdbcType=VARCHAR}, #{departmentno,jdbcType=VARCHAR}, #{lastupdatedat,jdbcType=TIMESTAMP},
      #{lastloginat,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.UserTest" >
    insert into api_usertest
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="mobileno != null" >
        mobileno,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="departmentno != null" >
        departmentno,
      </if>
      <if test="lastupdatedat != null" >
        lastupdatedAt,
      </if>
      <if test="lastloginat != null" >
        lastloginAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="mobileno != null" >
        #{mobileno,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="departmentno != null" >
        #{departmentno,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatedat != null" >
        #{lastupdatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginat != null" >
        #{lastloginat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.UserTest" >
    update api_usertest
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="mobileno != null" >
        mobileno = #{mobileno,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="departmentno != null" >
        departmentno = #{departmentno,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatedat != null" >
        lastupdatedAt = #{lastupdatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginat != null" >
        lastloginAt = #{lastloginat,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.UserTest" >
    update api_usertest
    set username = #{username,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      mobileno = #{mobileno,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      departmentno = #{departmentno,jdbcType=VARCHAR},
      lastupdatedAt = #{lastupdatedat,jdbcType=TIMESTAMP},
      lastloginAt = #{lastloginat,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>